ackage co.edu.uelbosque.model.persistence;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import co.edu.uelbosque.model.regalo;

public class Archivo {
	File f;
    private ObjectInputStream entrada;
    private ObjectOutputStream salida;

    public Archivo() {
    	f = new File ("data.csv");
    }
   
	public Archivo(File file) {
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (IOException ex) {

            }
        }
    }

    public void uploadData(ArrayList<regalo> regalo, File file, String cedula) {
        try {
            if (!regalo.contains(cedula)) {
            	salida = new ObjectOutputStream(new FileOutputStream(file));
				salida.writeObject(regalo);
				salida.close();
			}
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    public ArrayList<regalo> leerArchivo(File file) {
        ArrayList<regalo> registrad = new ArrayList<regalo>();
        if (file.length() != 0) {
            try {
                entrada = new ObjectInputStream(new FileInputStream(file)); 
                registrad.addAll((ArrayList<regalo>) entrada.readObject()); 
                entrada.close();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            }
        }
        return registrad;
    }
    
    public File getF() {
		return f;
	}
	public void setF(File f) {
		this.f = f;
	}

    public ObjectInputStream getEntrada() {
        return entrada;
    }

    public void setEntrada(ObjectInputStream entrada) {
        this.entrada = entrada;
    }

    public ObjectOutputStream getSalida() {
        return salida;
    }

    public void setSalida(ObjectOutputStream salida) {
        this.salida = salida;
    }
   
}
